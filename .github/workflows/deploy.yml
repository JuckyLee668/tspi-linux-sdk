run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: | 
            sudo apt update
            sudo apt install -y git ssh make gcc libssl-dev liblz4-tool expect \
                  g++ patchelf chrpath gawk texinfo chrpath diffstat binfmt-support \
                  qemu-user-static live-build bison flex fakeroot cmake gcc-multilib \
                  g++-multilib unzip device-tree-compiler ncurses-dev python2
      - name: init
        run: | 
          set -e
          expect -c '
          spawn ./build.sh init
          expect "Choose an option:"
          send "1\r"
          expect eof
          '
      - name: Build
        run: ./build.sh
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
              tag_name: ${{ github.ref }}
              release_name: Release ${{ github.ref }}
              draft: false
              prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
              upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
              asset_path: output/update/Image/update.img
              asset_name: update${{ github.ref }}.img
              #asset_content_type: application/gzip
